
kavon:     file format elf64-x86-64

Disassembly of section .init:

00000000004003a8 <_init>:
  4003a8:	48 83 ec 08          	sub    $0x8,%rsp
  4003ac:	e8 7b 00 00 00       	callq  40042c <call_gmon_start>
  4003b1:	e8 fa 00 00 00       	callq  4004b0 <frame_dummy>
  4003b6:	e8 45 02 00 00       	callq  400600 <__do_global_ctors_aux>
  4003bb:	48 83 c4 08          	add    $0x8,%rsp
  4003bf:	c3                   	retq   
Disassembly of section .plt:

00000000004003c0 <puts@plt-0x10>:
  4003c0:	ff 35 5a 05 20 00    	pushq  2098522(%rip)        # 600920 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003c6:	ff 25 5c 05 20 00    	jmpq   *2098524(%rip)        # 600928 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003d0 <puts@plt>:
  4003d0:	ff 25 5a 05 20 00    	jmpq   *2098522(%rip)        # 600930 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003d6:	68 00 00 00 00       	pushq  $0x0
  4003db:	e9 e0 ff ff ff       	jmpq   4003c0 <_init+0x18>

00000000004003e0 <__libc_start_main@plt>:
  4003e0:	ff 25 52 05 20 00    	jmpq   *2098514(%rip)        # 600938 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003e6:	68 01 00 00 00       	pushq  $0x1
  4003eb:	e9 d0 ff ff ff       	jmpq   4003c0 <_init+0x18>

00000000004003f0 <strcmp@plt>:
  4003f0:	ff 25 4a 05 20 00    	jmpq   *2098506(%rip)        # 600940 <_GLOBAL_OFFSET_TABLE_+0x28>
  4003f6:	68 02 00 00 00       	pushq  $0x2
  4003fb:	e9 c0 ff ff ff       	jmpq   4003c0 <_init+0x18>
Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 60 05 40 00 	mov    $0x400560,%r8
  400416:	48 c7 c1 70 05 40 00 	mov    $0x400570,%rcx
  40041d:	48 c7 c7 d8 04 40 00 	mov    $0x4004d8,%rdi
  400424:	e8 b7 ff ff ff       	callq  4003e0 <__libc_start_main@plt>
  400429:	f4                   	hlt    
  40042a:	90                   	nop    
  40042b:	90                   	nop    

000000000040042c <call_gmon_start>:
  40042c:	48 83 ec 08          	sub    $0x8,%rsp
  400430:	48 8b 05 d9 04 20 00 	mov    2098393(%rip),%rax        # 600910 <_DYNAMIC+0x190>
  400437:	48 85 c0             	test   %rax,%rax
  40043a:	74 02                	je     40043e <call_gmon_start+0x12>
  40043c:	ff d0                	callq  *%rax
  40043e:	48 83 c4 08          	add    $0x8,%rsp
  400442:	c3                   	retq   
  400443:	90                   	nop    
  400444:	90                   	nop    
  400445:	90                   	nop    
  400446:	90                   	nop    
  400447:	90                   	nop    
  400448:	90                   	nop    
  400449:	90                   	nop    
  40044a:	90                   	nop    
  40044b:	90                   	nop    
  40044c:	90                   	nop    
  40044d:	90                   	nop    
  40044e:	90                   	nop    
  40044f:	90                   	nop    

0000000000400450 <__do_global_dtors_aux>:
  400450:	55                   	push   %rbp
  400451:	48 89 e5             	mov    %rsp,%rbp
  400454:	53                   	push   %rbx
  400455:	48 83 ec 08          	sub    $0x8,%rsp
  400459:	80 3d f8 04 20 00 00 	cmpb   $0x0,2098424(%rip)        # 600958 <completed.6145>
  400460:	75 44                	jne    4004a6 <__do_global_dtors_aux+0x56>
  400462:	b8 70 07 60 00       	mov    $0x600770,%eax
  400467:	48 2d 68 07 60 00    	sub    $0x600768,%rax
  40046d:	48 c1 f8 03          	sar    $0x3,%rax
  400471:	48 8d 58 ff          	lea    0xffffffffffffffff(%rax),%rbx
  400475:	48 8b 05 d4 04 20 00 	mov    2098388(%rip),%rax        # 600950 <dtor_idx.6147>
  40047c:	48 39 c3             	cmp    %rax,%rbx
  40047f:	76 1e                	jbe    40049f <__do_global_dtors_aux+0x4f>
  400481:	48 83 c0 01          	add    $0x1,%rax
  400485:	48 89 05 c4 04 20 00 	mov    %rax,2098372(%rip)        # 600950 <dtor_idx.6147>
  40048c:	ff 14 c5 68 07 60 00 	callq  *0x600768(,%rax,8)
  400493:	48 8b 05 b6 04 20 00 	mov    2098358(%rip),%rax        # 600950 <dtor_idx.6147>
  40049a:	48 39 c3             	cmp    %rax,%rbx
  40049d:	77 e2                	ja     400481 <__do_global_dtors_aux+0x31>
  40049f:	c6 05 b2 04 20 00 01 	movb   $0x1,2098354(%rip)        # 600958 <completed.6145>
  4004a6:	48 83 c4 08          	add    $0x8,%rsp
  4004aa:	5b                   	pop    %rbx
  4004ab:	c9                   	leaveq 
  4004ac:	c3                   	retq   
  4004ad:	0f 1f 00             	nopl   (%rax)

00000000004004b0 <frame_dummy>:
  4004b0:	55                   	push   %rbp
  4004b1:	48 83 3d bf 02 20 00 	cmpq   $0x0,2097855(%rip)        # 600778 <__JCR_END__>
  4004b8:	00 
  4004b9:	48 89 e5             	mov    %rsp,%rbp
  4004bc:	74 16                	je     4004d4 <frame_dummy+0x24>
  4004be:	b8 00 00 00 00       	mov    $0x0,%eax
  4004c3:	48 85 c0             	test   %rax,%rax
  4004c6:	74 0c                	je     4004d4 <frame_dummy+0x24>
  4004c8:	bf 78 07 60 00       	mov    $0x600778,%edi
  4004cd:	49 89 c3             	mov    %rax,%r11
  4004d0:	c9                   	leaveq 
  4004d1:	41 ff e3             	jmpq   *%r11
  4004d4:	c9                   	leaveq 
  4004d5:	c3                   	retq   
  4004d6:	90                   	nop    
  4004d7:	90                   	nop    

00000000004004d8 <main>:
#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[])
{
  4004d8:	55                   	push   %rbp
  4004d9:	48 89 e5             	mov    %rsp,%rbp
  4004dc:	48 83 ec 30          	sub    $0x30,%rsp
  4004e0:	89 7d ec             	mov    %edi,0xffffffffffffffec(%rbp)
  4004e3:	48 89 75 e0          	mov    %rsi,0xffffffffffffffe0(%rbp)
    char passwd[] = "password";
  4004e7:	48 8b 05 a4 01 00 00 	mov    420(%rip),%rax        # 400692 <__dso_handle+0x42>
  4004ee:	48 89 45 f0          	mov    %rax,0xfffffffffffffff0(%rbp)
  4004f2:	0f b6 05 a1 01 00 00 	movzbl 417(%rip),%eax        # 40069a <__dso_handle+0x4a>
  4004f9:	88 45 f8             	mov    %al,0xfffffffffffffff8(%rbp)
    if (argc < 2)
  4004fc:	83 7d ec 01          	cmpl   $0x1,0xffffffffffffffec(%rbp)
  400500:	7f 13                	jg     400515 <main+0x3d>
    {
        printf("at least one argument\n");
  400502:	bf 58 06 40 00       	mov    $0x400658,%edi
  400507:	e8 c4 fe ff ff       	callq  4003d0 <puts@plt>
        return 1;
  40050c:	c7 45 dc 01 00 00 00 	movl   $0x1,0xffffffffffffffdc(%rbp)
  400513:	eb 3c                	jmp    400551 <main+0x79>
    }

    if (!strcmp(passwd, argv[1]))
  400515:	48 8b 45 e0          	mov    0xffffffffffffffe0(%rbp),%rax
  400519:	48 83 c0 08          	add    $0x8,%rax
  40051d:	48 8b 30             	mov    (%rax),%rsi
  400520:	48 8d 7d f0          	lea    0xfffffffffffffff0(%rbp),%rdi
  400524:	e8 c7 fe ff ff       	callq  4003f0 <strcmp@plt>
  400529:	85 c0                	test   %eax,%eax
  40052b:	75 13                	jne    400540 <main+0x68>
    {
        printf("correct password\n");
  40052d:	bf 6e 06 40 00       	mov    $0x40066e,%edi
  400532:	e8 99 fe ff ff       	callq  4003d0 <puts@plt>
        return 0;
  400537:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
  40053e:	eb 11                	jmp    400551 <main+0x79>
    }

    printf("incorrect password\n");
  400540:	bf 7f 06 40 00       	mov    $0x40067f,%edi
  400545:	e8 86 fe ff ff       	callq  4003d0 <puts@plt>
    return 0;
  40054a:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
  400551:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
}
  400554:	c9                   	leaveq 
  400555:	c3                   	retq   
  400556:	90                   	nop    
  400557:	90                   	nop    
  400558:	90                   	nop    
  400559:	90                   	nop    
  40055a:	90                   	nop    
  40055b:	90                   	nop    
  40055c:	90                   	nop    
  40055d:	90                   	nop    
  40055e:	90                   	nop    
  40055f:	90                   	nop    

0000000000400560 <__libc_csu_fini>:
  400560:	f3 c3                	repz retq 
  400562:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400570 <__libc_csu_init>:
  400570:	4c 89 64 24 e0       	mov    %r12,0xffffffffffffffe0(%rsp)
  400575:	4c 89 6c 24 e8       	mov    %r13,0xffffffffffffffe8(%rsp)
  40057a:	4c 8d 25 d3 01 20 00 	lea    2097619(%rip),%r12        # 600754 <__fini_array_end>
  400581:	4c 89 74 24 f0       	mov    %r14,0xfffffffffffffff0(%rsp)
  400586:	4c 89 7c 24 f8       	mov    %r15,0xfffffffffffffff8(%rsp)
  40058b:	49 89 f6             	mov    %rsi,%r14
  40058e:	48 89 5c 24 d0       	mov    %rbx,0xffffffffffffffd0(%rsp)
  400593:	48 89 6c 24 d8       	mov    %rbp,0xffffffffffffffd8(%rsp)
  400598:	48 83 ec 38          	sub    $0x38,%rsp
  40059c:	41 89 ff             	mov    %edi,%r15d
  40059f:	49 89 d5             	mov    %rdx,%r13
  4005a2:	e8 01 fe ff ff       	callq  4003a8 <_init>
  4005a7:	48 8d 05 a6 01 20 00 	lea    2097574(%rip),%rax        # 600754 <__fini_array_end>
  4005ae:	49 29 c4             	sub    %rax,%r12
  4005b1:	49 c1 fc 03          	sar    $0x3,%r12
  4005b5:	4d 85 e4             	test   %r12,%r12
  4005b8:	74 1e                	je     4005d8 <__libc_csu_init+0x68>
  4005ba:	31 ed                	xor    %ebp,%ebp
  4005bc:	48 89 c3             	mov    %rax,%rbx
  4005bf:	90                   	nop    
  4005c0:	48 83 c5 01          	add    $0x1,%rbp
  4005c4:	4c 89 ea             	mov    %r13,%rdx
  4005c7:	4c 89 f6             	mov    %r14,%rsi
  4005ca:	44 89 ff             	mov    %r15d,%edi
  4005cd:	ff 13                	callq  *(%rbx)
  4005cf:	48 83 c3 08          	add    $0x8,%rbx
  4005d3:	49 39 ec             	cmp    %rbp,%r12
  4005d6:	75 e8                	jne    4005c0 <__libc_csu_init+0x50>
  4005d8:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4005dd:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4005e2:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  4005e7:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  4005ec:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  4005f1:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  4005f6:	48 83 c4 38          	add    $0x38,%rsp
  4005fa:	c3                   	retq   
  4005fb:	90                   	nop    
  4005fc:	90                   	nop    
  4005fd:	90                   	nop    
  4005fe:	90                   	nop    
  4005ff:	90                   	nop    

0000000000400600 <__do_global_ctors_aux>:
  400600:	55                   	push   %rbp
  400601:	48 89 e5             	mov    %rsp,%rbp
  400604:	53                   	push   %rbx
  400605:	bb 58 07 60 00       	mov    $0x600758,%ebx
  40060a:	48 83 ec 08          	sub    $0x8,%rsp
  40060e:	48 8b 05 43 01 20 00 	mov    2097475(%rip),%rax        # 600758 <__CTOR_LIST__>
  400615:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400619:	74 14                	je     40062f <__do_global_ctors_aux+0x2f>
  40061b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400620:	48 83 eb 08          	sub    $0x8,%rbx
  400624:	ff d0                	callq  *%rax
  400626:	48 8b 03             	mov    (%rbx),%rax
  400629:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40062d:	75 f1                	jne    400620 <__do_global_ctors_aux+0x20>
  40062f:	48 83 c4 08          	add    $0x8,%rsp
  400633:	5b                   	pop    %rbx
  400634:	c9                   	leaveq 
  400635:	c3                   	retq   
  400636:	90                   	nop    
  400637:	90                   	nop    
Disassembly of section .fini:

0000000000400638 <_fini>:
  400638:	48 83 ec 08          	sub    $0x8,%rsp
  40063c:	e8 0f fe ff ff       	callq  400450 <__do_global_dtors_aux>
  400641:	48 83 c4 08          	add    $0x8,%rsp
  400645:	c3                   	retq   
