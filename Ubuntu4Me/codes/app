一、头脑风暴
1. 基础编程
2. 脚本编程
3. 自动化测试
4. GUI程序开发
5. 云技术
6. 网络及系统
7. 数据库技术
8. C/C++
9. 框架编程
关键问题：如何克服学习过程中的难点？
解决方案：学会分解问题，一个一个攻克；
          排定优先级，有先有后；
          寻求资源的帮助（耐心深入学习，求助他人等），合理分配时间来完成

二、收敛思考
1. 观察：阅读学习更多的工具项目代码
2. 联想：排列组合产生新的东西
3. 反转：做加法或者减法
关键问题：从哪个点切入进去？
（方法：首先需要掌握更多的资源，然后实现观察、联想和反转）
解决方法：选取一个简单的脚本或者项目入手，不要轻言放弃，从中获得更大的成就感
需要认识到开始都没那么容易，无论选择哪个点都需要进一步的学习，克服一个又一个困难

三、确立一个相对高点的目标，并用来解决实际问题
1. 自动化测试：单元测试，代码覆盖率测试，功能测试，系统测试，升级测试，Smoke测试
2. 自动化脚本编程
关键问题：结合点在哪里？
解决办法：1. 回顾一下工作中遇到的效率不高的做法；
          2. 观察同事，与同事沟通了解他们遇到的问题
		  3. 创造出缺失的功能
