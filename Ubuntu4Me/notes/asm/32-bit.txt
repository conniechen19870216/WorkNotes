【补充寄存器种类】
4个32位控制寄存器：CR0、CR1、CR2、CR3
4个段表基地址寄存器：GDTR(48)、IDTR(48)、LDTR(16)、TR(16)


1. 80386的两种工作模式：实模式和保护模式
   1）实模式：等同于16位的8086微处理器
      a）16位数据总线，20位地址总线
      b）分段，每段最大限长是64KB
      c）寻址方式：段基址+段内偏移地址，即段基址左移4位，加上段内偏移地址

   2）保护模式
      a）32位数据总线，32位地址总线
      b）寻址方式：段选择符+段内偏移地址


      <二维>虚拟地址空间 
      选择子(16) 偏移量(32)
                         -> 分段管理机制
                                         -> <一维>线性地址空间 
                                                         |     -> 分页管理机制 
                                                         |                     -> <一维>物理地址空间
                                                         |                                 ^
                                                         |                                 |
                                                         +---------------------------------+   
     分段管理机制：段表存储在线性地址空间    
     分页管理机制：页表存储在物理地址空间
     虚拟地址空间：64TB，应用程序中用于访问存储器的地址。
     线性地址空间：4G
     物理地址空间：4G
     其中，线性地址空间隔离了虚拟地址空间和物理地址空间，避免多个虚拟地址空间映射到同一个物理地址空间

   3）根本区别：保护模式同实模式的根本区别是进程内存受保护与否。

   4）分段管理机制
      a）选择子：16位
         --------------------------------------------------------------------------            
         |           索引值（13位）           |    TI（1位）   |    RPL（2位）    |
         --------------------------------------------------------------------------
      b）段描述符：64位
         i）  包括三部分：段基地址（32位）+ 段长度（20位）+ 段属性（12位）
         ii） 段描述符表 - 段描述符的表，可以看做一个结构体数组，数组的每个元素就是段描述符结构体
         iii）最多8192个段描述符
              a）根据选择子的结构：2^13
              b）根据GDTR的结构，2^16/64 = 2^16/2^3 = 2^13
                 --------------------------------------------------------------------------            
                 |           段基地址（32位）           |       段限长（16位）            |
                 --------------------------------------------------------------------------                 
         iv） GDTR：GDT的段表基地址

【例】 (GDTR)＝0010 0000 0FFFH ，求GDT 在物理存储器中的起始地址，结束地址，表的大小，表中可以存放多少个描述符？
        解：
        GDT 的起始地址为0010 0000H
        结束地址为：0010 0000H＋0FFFH＝0010 0FFFH
        表的大小为：0FFFH＋1＝4096 字节
        表中可以存放：4096/8＝512 个描述符
        
              LDTR：LDT的选择子，索引至GDT中，GDT里面存放的是LDT的段表基地址
                    SEL:OFFSET (TI=1)，其中SEL指的是LDT的第SEL个描述符

              特殊说明：局部描述符表寄存器LDTR 包含一个16 位的选择器(63 位～48 位)和不可见的高速缓存器(47 位～0 位)
                        用局部描述符表指令LLDT 对局部描述符表寄存器LDTR 内的选择符进行读操作，用保存在局部描述符寄存器内
                        的16 位的选择符识别GDT，从GDT 中检索出相应的LDT 描述符，处理器便将局部描述符自动置入LDTR 的高速
                        缓存器中，将该描述符装入高速缓冲寄存器就为当前任务创建了一个LDT。
                        这样80386/486 微处理器便可以根据LDTR 高速缓存器的值来确定局部描述符表的起始地址和段界限，而不必
                        再访问存储器从GDT 中查出LDT 描述符，直接从LDTR 高速缓存器来确定局部描述符表的起始地址和段界限，
                        节省了程序运行时间

                    
              TR: TSS是一个内存中的数据结构，用于在任务切换时保存任务用到的寄存器内容（包括LDT的选择子），以便切换回来继续使用

   5）特殊说明：
      Windows将每一个任务可使用的整个线性地址空间分为相等的两半。一半空间的描述符在全局描述符表中，称为全局地址空间；
      另一半的描述符在局部描述符表中，称为局部地址空间，即任务的私有地址空间。
      
      其中，Windows将操作系统的核心代码和内核态服务函数映射到每个任务的2G全局地址空间中(0x80000000 ~ 0xFFFFFFFF)，
      使其服务和数据被所有任务共享。

      在Windows中，每个任务实际最多可以使用的线性地址空间为2G。

                               |---------------|
                               |               |
                               |               |
                               |   内核模式    |
                               |   地址空间    |--------|
                               |               |-----|  |                          
                               |               |--|  |  |
                               |---------------|  |  |  |
                               |               |  |  |  |
                               |               |  |  |  |
                               |   用户模式    |  |  |  |
                               |   地址空间    |  |  |--|
                               |               |  |--|
                               |               |--|  进程上下文
                               |---------------|




   6）分页管理机制
      a）CR0中的PG为决定分页管理机制是否生效。
	  b）80386的页固定大小为4KB，每一页的边界地址必须是4K的倍数。因此，4G大小的地址空间被划分为1M个页，每个页的起始地址用20位记录。
	  c）线性地址的低12位经过分页机制直接作为物理地址的低12位使用。页映射函数可看成是把线性地址的高20位转换为对应物理地址高20位的转换函数。
      d）两级页表结构
	     第一级：页目录表 -- 1K * 4B = 4KB
		 第二级：页表 -- 1K * 4B = 4KB
		 当前页目录表的物理基地址存放在CR3寄存器中。