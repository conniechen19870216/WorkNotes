1. Python 全景: 模块，语句，表达式，对象
1) 程序由模块构成
2) 模块包含语句
3) 语句包含表达式
4) 表达式建立并处理对象

Python的语法实质上是由语句和表达式组成的。
表达式处理对象并嵌套在语句中。
语句编辑实现程序操作中更大的逻辑关系，因为语句可以使用并引导表达式处理对象。
语句总是存在于模块中的，而模块本身则又是由语句来管理的。

2. 两个if的故事
1) 类C语言的语法
if (x > y)
{
	x = 1;
	y = 2;
}
2) Python的语法
if x > y:
	x = 1
	y = 2
Note: Python增加了":"和自动缩进功能;
      Python去掉了(), {}, ;

3. 总结
1) 一行的结束就是终止该行语句（没有分号）
2) 嵌套语句是代码块并且与实际的缩进有关（没有大括号）

4. 特例
1) 一行包括多个语句
a = 1; b = 2; print a + b
2) 反向：可以让一个语句的范围横跨很多（[], (), {}, \）
>>> mlist = [111,
...          222,
...          333]
>>> mlist
[111, 222, 333]

>>> X = (A + B +
...      C + D)

>>> if (A == 1 and
...     B == 2 and
...     C == 3):
...         print 'spam' * 3

X = A + B + \
    C + D

5. 交互式循环示例
>>> while True:
...     reply = raw_input('Enter text:')
...     if reply == 'stop': break
...     print reply.upper()
